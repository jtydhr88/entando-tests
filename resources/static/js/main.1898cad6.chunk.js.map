{"version":3,"sources":["App.js","NewsCardConfigElement.js"],"names":["App","props","state","categoryCode","contentTypeCode","target","this","setState","name","value","htmlFor","onChange","e","handleChange","Component","NewsCardConfigElement","reactRoofRef","React","createRef","mountPoint","document","createElement","appendChild","ReactDOM","render","ref","current","HTMLElement","customElements","get","define"],"mappings":"wSAmDeA,G,wDA/Cb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,aAAc,GACdC,gBAAiB,IAJF,E,yDAQNC,GACXC,KAAKC,SAAL,eACGF,EAAOG,KAAOH,EAAOI,U,+BAIhB,IAAD,SACmCH,KAAKJ,MAAvCC,EADD,EACCA,aAAcC,EADf,EACeA,gBACtB,OACE,6BACE,yEAIA,2BAAOM,QAAQ,gBAAf,aACA,4BACEF,KAAK,eACLC,MAAON,EACPQ,SAAU,SAAAC,GAAC,OAAI,EAAKC,aAAaD,EAAEP,UAEnC,4BAAQI,MAAM,IAAd,kBACA,4BAAQA,MAAM,iBAAd,iBACA,4BAAQA,MAAM,eAAd,gBAEF,6BACA,2BAAOC,QAAQ,mBAAf,iBACA,4BACEF,KAAK,kBACLC,MAAOL,EACPO,SAAU,SAAAC,GAAC,OAAI,EAAKC,aAAaD,EAAEP,UAEnC,4BAAQI,MAAM,IAAd,kBACA,4BAAQA,MAAM,OAAd,c,GAzCQK,cCCZC,E,kDACJ,aAAe,IAAD,8BACZ,gBACKC,aAAeC,IAAMC,YAC1B,EAAKC,WAAa,KAHN,E,gEAeZb,KAAKa,WAAaC,SAASC,cAAc,OACzCf,KAAKgB,YAAYhB,KAAKa,YACtBI,IAASC,OAAO,kBAAC,EAAD,CAAKC,IAAKnB,KAAKU,eAAkBV,KAAKa,c,6BAVtD,OAAOb,KAAKU,aAAaU,QAAUpB,KAAKU,aAAaU,QAAQxB,MAAQ,I,aAG5DO,GACT,OAAOH,KAAKU,aAAaU,QAAQnB,SAASE,O,eAZVkB,cAsB/BC,eAAeC,IAAI,wBACtBD,eAAeE,OAAO,sBAAuBf,K","file":"static/js/main.1898cad6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      categoryCode: '',\n      contentTypeCode: '', \n    };\n  }\n\n  handleChange(target) {\n    this.setState({\n      [target.name]: target.value\n    });\n  }\n\n  render() {\n    const { categoryCode, contentTypeCode } = this.state;\n    return (\n      <div>\n        <h1>\n          Select the news category and content type\n        </h1>\n        {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n        <label htmlFor=\"categoryCode\">Category </label>\n        <select\n          name=\"categoryCode\"\n          value={categoryCode}\n          onChange={e => this.handleChange(e.target)}\n        >\n          <option value=\"\">Select a value</option>\n          <option value=\"industry_news\">Industry News</option>\n          <option value=\"client_news\">Client News</option>\n        </select>\n        <br/>\n        <label htmlFor=\"contentTypeCode\">Content Type </label>\n        <select\n          name=\"contentTypeCode\"\n          value={contentTypeCode}\n          onChange={e => this.handleChange(e.target)}\n        >\n          <option value=\"\">Select a value</option>\n          <option value=\"nws\">News</option>\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nclass NewsCardConfigElement extends HTMLElement {\n  constructor() {\n    super();\n    this.reactRoofRef = React.createRef();\n    this.mountPoint = null;\n  }\n\n  get config() {\n    return this.reactRoofRef.current ? this.reactRoofRef.current.state : {};\n  }\n\n  set config(value) {\n    return this.reactRoofRef.current.setState(value);\n  }\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.appendChild(this.mountPoint);\n    ReactDOM.render(<App ref={this.reactRoofRef} />, this.mountPoint);\n  }\n}\n\nif (!customElements.get('dw-news-card-config')) {\n  customElements.define('dw-news-card-config', NewsCardConfigElement);\n}\n"],"sourceRoot":""}