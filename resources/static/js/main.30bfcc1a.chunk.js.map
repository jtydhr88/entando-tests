{"version":3,"sources":["auth/KeycloakContext.js","api/helpers.js","api/category.js","api/content.js","App.js","helpers/widgetEvents.js","i18n/locales/index.js","i18n/i18n.js","i18n/setLocale.js","i18n/constants.js","NewsCardConfigElement.js","widgetEventTypes.js"],"names":["KeycloakContext","React","createContext","getDefaultOptions","headers","Headers","Authorization","window","entando","keycloak","authenticated","token","request","url","options","a","fetch","response","status","json","Promise","reject","Error","statusText","apiCategoryGet","serviceUrl","method","apiContentTypeGet","App","selectedCategory","selectedContentType","updateState","useTranslation","t","i18n","useState","categories","setCategories","contentTypes","setContentTypes","useContext","initialized","useEffect","payload","fetchData","console","log","name","value","onChange","e","target","map","contentType","key","code","cat","titles","language","defaultProps","onError","en","resources","Object","keys","locales","reduce","acc","lang","i18next","locale","defaultLocale","use","initReactI18next","init","defaultNs","interpolation","escapeValue","lng","fallbackLng","react","useSuspense","setI18nextLocale","getKeycloakInstance","ATTRIBUTES","NewsCardConfigElement","args","mountPoint","unsubscribeFromKeycloakEvent","bind","state","this","setState","eventType","eventHandler","document","createElement","appendChild","render","addEventListener","removeEventListener","getAttribute","setLocale","ReactComponent","error","customEvent","CustomEvent","details","dispatchEvent","ReactDOM","Provider","HTMLElement","customElements","define"],"mappings":"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","file":"static/js/main.30bfcc1a.chunk.js","sourcesContent":["import React from 'react';\n\nconst KeycloakContext = React.createContext(null);\n\nexport default KeycloakContext;\n","export const getKeycloakToken = () => {\n  if (\n    window &&\n    window.entando &&\n    window.entando.keycloak &&\n    window.entando.keycloak.authenticated\n  ) {\n    return window.entando.keycloak.token;\n  }\n  return '';\n};\n\nexport const getDefaultOptions = () => ({\n  headers: new Headers({\n    Authorization: `Bearer ${getKeycloakToken()}`,\n    'Content-Type': 'application/json',\n  }),\n});\n\nexport const request = async (url, options) => {\n  const response = await fetch(url, options);\n\n  if (response.status === 204) {\n    return {};\n  }\n\n  return response.status >= 200 && response.status < 300\n    ? response.json()\n    : Promise.reject(new Error(response.statusText || response.status));\n};\n","import { getDefaultOptions, request } from 'api/helpers';\r\n\r\nconst resource = 'api/categories';\r\n\r\nexport const apiCategoryGet = async (serviceUrl) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n","import { getDefaultOptions, request } from 'api/helpers';\n\nconst resource = 'api/contentTypes';\n\nexport const apiContentTypeGet = async (serviceUrl) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n  return request(url, options);\n};\n","import PropTypes from 'prop-types';\nimport { useContext, useState, useEffect } from 'react';\n\nimport { AuthenticatedView, UnauthenticatedView } from 'auth/KeycloakViews';\nimport { useTranslation } from 'react-i18next';\nimport KeycloakContext from 'auth/KeycloakContext';\nimport { apiCategoryGet } from 'api/category';\nimport { apiContentTypeGet } from 'api/content';\n\nimport React from 'react';\n// ----------------------------------------------------------------------\nApp.propTypes = {\n  onError: PropTypes.func,\n  serviceUrl: PropTypes.string,\n  selectedCategory: PropTypes.string,\n  selectedContentType: PropTypes.string,\n  changeState: PropTypes.func\n};\n\nApp.defaultProps = {\n  onError: () => {},\n  serviceUrl: '',\n};\n\nexport default function App({serviceUrl, selectedCategory, selectedContentType, updateState}) {\n  const { t, i18n } = useTranslation();\n\n  const [categories, setCategories] = useState([]);\n  const [contentTypes, setContentTypes] = useState([]);\n\n  // const [selectedCategory, setSelectedCategory] = useState('');\n  // const [selectedContentType, setSelectedContentType] = useState('');\n  \n  const keycloak = useContext(KeycloakContext);\n\n  const authenticated = keycloak.initialized && keycloak.authenticated;\n\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await apiCategoryGet(serviceUrl);\n      setCategories(response.payload);\n    }\n    if (authenticated) {\n      fetchData();\n    }\n  }, [authenticated]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await apiContentTypeGet(serviceUrl);\n      setContentTypes(response.payload);\n    }\n    if (authenticated) {\n      fetchData();\n    }\n  }, [authenticated]);\n  console.log(keycloak);\n  return (\n    <>\n        <h3>{t('common.contentTitle')}</h3>\n        <select name=\"selectedContentType\" value={selectedContentType} \n                onChange={e => {updateState({selectedContentType: e.target.value})}}>\n          {\n            contentTypes.map(contentType => \n              (<option key={contentType.code} value={contentType.code}>{contentType.name}</option>)\n            )\n          }\n        </select>\n        <h3>{t('common.categoryTitle')}</h3>\n        <select name=\"selectedCategory\" value={selectedCategory} \n                onChange={e => {updateState({selectedCategory: e.target.value})}}>\n          {\n            categories.map(cat => \n              (<option key={cat.code} value={cat.code}>{cat.titles[i18n.language]}</option>)\n            )\n          }\n        </select>\n    </>\n  );\n}\n\n\n","export const publishWidgetEvent = (eventId, payload) => {\n  const widgetEvent = new CustomEvent(eventId, {\n    detail: {\n      payload,\n    },\n  });\n  window.dispatchEvent(widgetEvent);\n};\n\nexport const createWidgetEventPublisher = eventType => payload =>\n  publishWidgetEvent(eventType, payload);\n\nexport const subscribeToWidgetEvent = (eventType, eventHandler) => {\n  window.addEventListener(eventType, eventHandler);\n\n  return () => {\n    window.removeEventListener(eventType, eventHandler);\n  };\n};\n\nexport const subscribeToWidgetEvents = (widgetEvents, eventHandler) => {\n  widgetEvents.forEach(eventType => window.addEventListener(eventType, eventHandler));\n\n  return () => {\n    widgetEvents.forEach(eventType => window.removeEventListener(eventType, eventHandler));\n  };\n};\n\nexport const widgetEventToFSA = widgetEvent => {\n  // for info about Flux Standard Action (FSA) see https://github.com/redux-utilities/flux-standard-action\n  const {\n    type,\n    detail: { payload, error, meta },\n  } = widgetEvent;\n  return { type, payload, error, meta };\n};\n","import en from 'i18n/locales/en.json';\n\nexport default {\n  en,\n};\n","import i18next from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport locales from 'i18n/locales';\n\nconst defaultNs = 'translation';\n\n// adds the default namespace ('translation') to resources object per i18next documentation\nconst resources = Object.keys(locales).reduce(\n  (acc, lang) => ({ ...acc, [lang]: { [defaultNs]: locales[lang] } }),\n  {}\n);\n\nexport const translateFn = i18next.t;\n\nexport const setI18nextLocale = (locale, defaultLocale) => {\n  i18next.use(initReactI18next).init({\n    defaultNs,\n    interpolation: {\n      escapeValue: false,\n    },\n    resources,\n    lng: locale || defaultLocale,\n    fallbackLng: defaultLocale,\n    react: { useSuspense: false },\n  });\n};\n","import { DEFAULT_LOCALE } from 'i18n/constants';\nimport { setI18nextLocale } from 'i18n/i18n';\n\nexport default locale => {\n  setI18nextLocale(locale, DEFAULT_LOCALE);\n};\n","export const DEFAULT_LOCALE = 'en';\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport KeycloakContext from './auth/KeycloakContext';\r\nimport { subscribeToWidgetEvent } from './helpers/widgetEvents';\r\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\r\nimport setLocale from './i18n/setLocale';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n};\r\n\r\nconst ATTRIBUTES = {\r\n  serviceUrl: 'service-url',\r\n  locale: 'locale',\r\n};\r\n\r\nclass NewsCardConfigElement extends HTMLElement {\r\n  constructor(...args) {\r\n    super(...args);\r\n\r\n    this.mountPoint = null;\r\n    this.unsubscribeFromKeycloakEvent = null;\r\n    this.keycloak = getKeycloakInstance();\r\n    \r\n    this.updateState = this.updateState.bind;\r\n\r\n    this.state = {\r\n      selectedCategory: '',\r\n      selectedContentType: '',\r\n    };\r\n  }\r\n\r\n  get config() {\r\n    return this.state;\r\n  }\r\n\r\n  set config(value) {\r\n    console.log(value);\r\n    return this.setState(value);\r\n  }\r\n\r\n  updateState(state) {\r\n    this.setState(state);\r\n  }\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.appendChild(this.mountPoint);\r\n\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n  }\r\n\r\n  render() {\r\n    const customEventPrefix = 'news.updates.config.';\r\n\r\n    const serviceURLConstant = '/news-content';\r\n\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || serviceURLConstant;\r\n\r\n    const state = this.state;\r\n\r\n    const updateState = this.updateState;\r\n\r\n    const onError = error => {\r\n      const customEvent = new CustomEvent(`${customEventPrefix}error`, {\r\n        details: {\r\n          error,\r\n        },\r\n      });\r\n      this.dispatchEvent(customEvent);\r\n    };\r\n\r\n    const locale = this.getAttribute(ATTRIBUTES.locale);\r\n    setLocale(locale);\r\n\r\n    const ReactComponent = React.createElement(App, {\r\n      onError,\r\n      updateState,\r\n      serviceUrl,\r\n      ...state\r\n    });\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>{ReactComponent}</KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    if (this.unsubscribeFromKeycloakEvent) {\r\n      this.unsubscribeFromKeycloakEvent();\r\n    }\r\n  }\r\n}\r\n\r\ncustomElements.define('dw-news-card-config', NewsCardConfigElement);\r\n\r\nexport default NewsCardConfigElement;","export const KEYCLOAK_EVENT_TYPE = 'keycloak';\n"],"sourceRoot":""}